// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: teleport/secreports/v1/secreports_service.proto

package secreportsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RunSecurityReportRequest
type RunSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the security report
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// days is a time range is days.
	Days uint32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *RunSecurityReportRequest) Reset() {
	*x = RunSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSecurityReportRequest) ProtoMessage() {}

func (x *RunSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*RunSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{0}
}

func (x *RunSecurityReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunSecurityReportRequest) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// DeleteAuditQueryRequest is
type DeleteAuditQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteAuditQueryRequest) Reset() {
	*x = DeleteAuditQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuditQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuditQueryRequest) ProtoMessage() {}

func (x *DeleteAuditQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuditQueryRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuditQueryRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAuditQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteSecurityReportRequest is
type DeleteSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSecurityReportRequest) Reset() {
	*x = DeleteSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecurityReportRequest) ProtoMessage() {}

func (x *DeleteSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSecurityReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// RunAuditQueryRequest is
type RunAuditQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*RunAuditQueryRequest_Name
	//	*RunAuditQueryRequest_SqlText
	Query isRunAuditQueryRequest_Query `protobuf_oneof:"query"`
	// Time range in days
	Days int32 `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *RunAuditQueryRequest) Reset() {
	*x = RunAuditQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAuditQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAuditQueryRequest) ProtoMessage() {}

func (x *RunAuditQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAuditQueryRequest.ProtoReflect.Descriptor instead.
func (*RunAuditQueryRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{3}
}

func (m *RunAuditQueryRequest) GetQuery() isRunAuditQueryRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *RunAuditQueryRequest) GetName() string {
	if x, ok := x.GetQuery().(*RunAuditQueryRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *RunAuditQueryRequest) GetSqlText() string {
	if x, ok := x.GetQuery().(*RunAuditQueryRequest_SqlText); ok {
		return x.SqlText
	}
	return ""
}

func (x *RunAuditQueryRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type isRunAuditQueryRequest_Query interface {
	isRunAuditQueryRequest_Query()
}

type RunAuditQueryRequest_Name struct {
	// audit_query name ...
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type RunAuditQueryRequest_SqlText struct {
	// sql_text
	SqlText string `protobuf:"bytes,2,opt,name=sql_text,json=sqlText,proto3,oneof"`
}

func (*RunAuditQueryRequest_Name) isRunAuditQueryRequest_Query() {}

func (*RunAuditQueryRequest_SqlText) isRunAuditQueryRequest_Query() {}

// UpsertAuditQueryRequest ...
type UpsertAuditQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AuditQuery  ...
	AuditQuery *AuditQuery `protobuf:"bytes,1,opt,name=audit_query,json=auditQuery,proto3" json:"audit_query,omitempty"`
}

func (x *UpsertAuditQueryRequest) Reset() {
	*x = UpsertAuditQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAuditQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAuditQueryRequest) ProtoMessage() {}

func (x *UpsertAuditQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAuditQueryRequest.ProtoReflect.Descriptor instead.
func (*UpsertAuditQueryRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertAuditQueryRequest) GetAuditQuery() *AuditQuery {
	if x != nil {
		return x.AuditQuery
	}
	return nil
}

// UpsertAuditQueryRequest ...
type UpsertSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AuditQuery  ...
	Report *SecurityReport `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *UpsertSecurityReportRequest) Reset() {
	*x = UpsertSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSecurityReportRequest) ProtoMessage() {}

func (x *UpsertSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*UpsertSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertSecurityReportRequest) GetReport() *SecurityReport {
	if x != nil {
		return x.Report
	}
	return nil
}

// GetAuditQueryRequest is ...
type GetAuditQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is ...
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetAuditQueryRequest) Reset() {
	*x = GetAuditQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuditQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditQueryRequest) ProtoMessage() {}

func (x *GetAuditQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditQueryRequest.ProtoReflect.Descriptor instead.
func (*GetAuditQueryRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAuditQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetAuditQueryRequest is ...
type GetSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is ...
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSecurityReportRequest) Reset() {
	*x = GetSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityReportRequest) ProtoMessage() {}

func (x *GetSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetSecurityReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetAuditQueryRequest is ...
type GetSecurityReportDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is ...
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Time range in days
	Days int32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GetSecurityReportDetailsRequest) Reset() {
	*x = GetSecurityReportDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityReportDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityReportDetailsRequest) ProtoMessage() {}

func (x *GetSecurityReportDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityReportDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetSecurityReportDetailsRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetSecurityReportDetailsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecurityReportDetailsRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// ListAuditQueryRequest is
type ListAuditQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page_size is the number of results to return. If page_size is 0, a default page size of 200 will be chosen.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_token value returned from a previous List request if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAuditQueryRequest) Reset() {
	*x = ListAuditQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditQueryRequest) ProtoMessage() {}

func (x *ListAuditQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditQueryRequest.ProtoReflect.Descriptor instead.
func (*ListAuditQueryRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListAuditQueryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAuditQueryRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListSecurityReportRequest is
type ListSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page_size is the number of results to return. If page_size is 0, a default page size of 200 will be chosen.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_token value returned from a previous List request if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSecurityReportRequest) Reset() {
	*x = ListSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityReportRequest) ProtoMessage() {}

func (x *ListSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*ListSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListSecurityReportRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSecurityReportRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListAuditQueryResponse is
type ListAuditQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// queries is
	Queries []*AuditQuery `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	// next_page_token is the next page token. If there are no more results, it will be empty.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAuditQueryResponse) Reset() {
	*x = ListAuditQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditQueryResponse) ProtoMessage() {}

func (x *ListAuditQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditQueryResponse.ProtoReflect.Descriptor instead.
func (*ListAuditQueryResponse) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListAuditQueryResponse) GetQueries() []*AuditQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *ListAuditQueryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetSchemaRequest
type GetSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{12}
}

// GetSchemaResponse is
type GetSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// views is
	Views []*GetSchemaResponse_ViewDesc `protobuf:"bytes,1,rep,name=views,proto3" json:"views,omitempty"`
}

func (x *GetSchemaResponse) Reset() {
	*x = GetSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse) ProtoMessage() {}

func (x *GetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetSchemaResponse) GetViews() []*GetSchemaResponse_ViewDesc {
	if x != nil {
		return x.Views
	}
	return nil
}

// RunAuditQueryResponse
type RunAuditQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result contains structure result.
	Result *QueryResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RunAuditQueryResponse) Reset() {
	*x = RunAuditQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAuditQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAuditQueryResponse) ProtoMessage() {}

func (x *RunAuditQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAuditQueryResponse.ProtoReflect.Descriptor instead.
func (*RunAuditQueryResponse) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{14}
}

func (x *RunAuditQueryResponse) GetResult() *QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListSecurityReportResponse response.
type ListSecurityReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// reports is list of security reports.
	Reports []*SecurityReport `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	// next_page_token is the next page token. If there are no more results, it will be empty.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSecurityReportResponse) Reset() {
	*x = ListSecurityReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityReportResponse) ProtoMessage() {}

func (x *ListSecurityReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityReportResponse.ProtoReflect.Descriptor instead.
func (*ListSecurityReportResponse) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListSecurityReportResponse) GetReports() []*SecurityReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *ListSecurityReportResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// SecurityReportResponse
type GetSecurityReportDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of as security security report.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Desc is a security reports description.
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// audit_queries contains information about audit query.
	AuditQueries []*GetSecurityReportDetailsResponse_AuditQuery `protobuf:"bytes,3,rep,name=audit_queries,json=auditQueries,proto3" json:"audit_queries,omitempty"`
}

func (x *GetSecurityReportDetailsResponse) Reset() {
	*x = GetSecurityReportDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityReportDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityReportDetailsResponse) ProtoMessage() {}

func (x *GetSecurityReportDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityReportDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetSecurityReportDetailsResponse) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetSecurityReportDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecurityReportDetailsResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetSecurityReportDetailsResponse) GetAuditQueries() []*GetSecurityReportDetailsResponse_AuditQuery {
	if x != nil {
		return x.AuditQueries
	}
	return nil
}

// QueryResult is proto representation of audit query result.
type QueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// columns list of columns.
	Columns []*QueryResult_ColumnInfo `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	// rows contains rows values.
	Rows []*QueryResult_Row `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{17}
}

func (x *QueryResult) GetColumns() []*QueryResult_ColumnInfo {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryResult) GetRows() []*QueryResult_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

// ViewDesc is
type GetSchemaResponse_ViewDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// desc is
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// columns is
	Columns []*GetSchemaResponse_ViewDesc_ColumnDesc `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *GetSchemaResponse_ViewDesc) Reset() {
	*x = GetSchemaResponse_ViewDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaResponse_ViewDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse_ViewDesc) ProtoMessage() {}

func (x *GetSchemaResponse_ViewDesc) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse_ViewDesc.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse_ViewDesc) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetSchemaResponse_ViewDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSchemaResponse_ViewDesc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetSchemaResponse_ViewDesc) GetColumns() []*GetSchemaResponse_ViewDesc_ColumnDesc {
	if x != nil {
		return x.Columns
	}
	return nil
}

// ColumnDesc is
type GetSchemaResponse_ViewDesc_ColumnDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type is
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// desc
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) Reset() {
	*x = GetSchemaResponse_ViewDesc_ColumnDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse_ViewDesc_ColumnDesc) ProtoMessage() {}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse_ViewDesc_ColumnDesc.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse_ViewDesc_ColumnDesc) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetSchemaResponse_ViewDesc_ColumnDesc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// AuditQuery is a Security Audit Query description type.
type GetSecurityReportDetailsResponse_AuditQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a name audit query
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// is a audit query description.
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// sql_query is a SQL Query.
	SqlQuery string `protobuf:"bytes,3,opt,name=sql_query,json=sqlQuery,proto3" json:"sql_query,omitempty"`
	// Result contains structure result.
	Result *QueryResult `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) Reset() {
	*x = GetSecurityReportDetailsResponse_AuditQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityReportDetailsResponse_AuditQuery) ProtoMessage() {}

func (x *GetSecurityReportDetailsResponse_AuditQuery) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityReportDetailsResponse_AuditQuery.ProtoReflect.Descriptor instead.
func (*GetSecurityReportDetailsResponse_AuditQuery) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) GetSqlQuery() string {
	if x != nil {
		return x.SqlQuery
	}
	return ""
}

func (x *GetSecurityReportDetailsResponse_AuditQuery) GetResult() *QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// ColumInfo contains information about column
type QueryResult_ColumnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryResult_ColumnInfo) Reset() {
	*x = QueryResult_ColumnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_ColumnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_ColumnInfo) ProtoMessage() {}

func (x *QueryResult_ColumnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_ColumnInfo.ProtoReflect.Descriptor instead.
func (*QueryResult_ColumnInfo) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *QueryResult_ColumnInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Row contains details about row value.
type QueryResult_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryResult_Row) Reset() {
	*x = QueryResult_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_Row) ProtoMessage() {}

func (x *QueryResult_Row) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_Row.ProtoReflect.Descriptor instead.
func (*QueryResult_Row) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP(), []int{17, 1}
}

func (x *QueryResult_Row) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_teleport_secreports_v1_secreports_service_proto protoreflect.FileDescriptor

var file_teleport_secreports_v1_secreports_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x42, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x73, 0x71, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73, 0x71, 0x6c, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5e, 0x0a,
	0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5d, 0x0a,
	0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x7e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb5, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x73, 0x63, 0x52, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x1a, 0xd5, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x57, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x73, 0x63, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x54, 0x0a,
	0x15, 0x52, 0x75, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc5, 0x02, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x68, 0x0a, 0x0d, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x8e, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x71,
	0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x20, 0x0a, 0x0a, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x19, 0x0a,
	0x03, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x96, 0x0a, 0x0a, 0x11, 0x53, 0x65, 0x63,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b,
	0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x6f,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x63, 0x0a, 0x14,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x33, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x7b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x33, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x6c, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x28, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x8d, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x37,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_teleport_secreports_v1_secreports_service_proto_rawDescOnce sync.Once
	file_teleport_secreports_v1_secreports_service_proto_rawDescData = file_teleport_secreports_v1_secreports_service_proto_rawDesc
)

func file_teleport_secreports_v1_secreports_service_proto_rawDescGZIP() []byte {
	file_teleport_secreports_v1_secreports_service_proto_rawDescOnce.Do(func() {
		file_teleport_secreports_v1_secreports_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_secreports_v1_secreports_service_proto_rawDescData)
	})
	return file_teleport_secreports_v1_secreports_service_proto_rawDescData
}

var file_teleport_secreports_v1_secreports_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_teleport_secreports_v1_secreports_service_proto_goTypes = []interface{}{
	(*RunSecurityReportRequest)(nil),                    // 0: teleport.secreports.v1.RunSecurityReportRequest
	(*DeleteAuditQueryRequest)(nil),                     // 1: teleport.secreports.v1.DeleteAuditQueryRequest
	(*DeleteSecurityReportRequest)(nil),                 // 2: teleport.secreports.v1.DeleteSecurityReportRequest
	(*RunAuditQueryRequest)(nil),                        // 3: teleport.secreports.v1.RunAuditQueryRequest
	(*UpsertAuditQueryRequest)(nil),                     // 4: teleport.secreports.v1.UpsertAuditQueryRequest
	(*UpsertSecurityReportRequest)(nil),                 // 5: teleport.secreports.v1.UpsertSecurityReportRequest
	(*GetAuditQueryRequest)(nil),                        // 6: teleport.secreports.v1.GetAuditQueryRequest
	(*GetSecurityReportRequest)(nil),                    // 7: teleport.secreports.v1.GetSecurityReportRequest
	(*GetSecurityReportDetailsRequest)(nil),             // 8: teleport.secreports.v1.GetSecurityReportDetailsRequest
	(*ListAuditQueryRequest)(nil),                       // 9: teleport.secreports.v1.ListAuditQueryRequest
	(*ListSecurityReportRequest)(nil),                   // 10: teleport.secreports.v1.ListSecurityReportRequest
	(*ListAuditQueryResponse)(nil),                      // 11: teleport.secreports.v1.ListAuditQueryResponse
	(*GetSchemaRequest)(nil),                            // 12: teleport.secreports.v1.GetSchemaRequest
	(*GetSchemaResponse)(nil),                           // 13: teleport.secreports.v1.GetSchemaResponse
	(*RunAuditQueryResponse)(nil),                       // 14: teleport.secreports.v1.RunAuditQueryResponse
	(*ListSecurityReportResponse)(nil),                  // 15: teleport.secreports.v1.ListSecurityReportResponse
	(*GetSecurityReportDetailsResponse)(nil),            // 16: teleport.secreports.v1.GetSecurityReportDetailsResponse
	(*QueryResult)(nil),                                 // 17: teleport.secreports.v1.QueryResult
	(*GetSchemaResponse_ViewDesc)(nil),                  // 18: teleport.secreports.v1.GetSchemaResponse.ViewDesc
	(*GetSchemaResponse_ViewDesc_ColumnDesc)(nil),       // 19: teleport.secreports.v1.GetSchemaResponse.ViewDesc.ColumnDesc
	(*GetSecurityReportDetailsResponse_AuditQuery)(nil), // 20: teleport.secreports.v1.GetSecurityReportDetailsResponse.AuditQuery
	(*QueryResult_ColumnInfo)(nil),                      // 21: teleport.secreports.v1.QueryResult.ColumnInfo
	(*QueryResult_Row)(nil),                             // 22: teleport.secreports.v1.QueryResult.Row
	(*AuditQuery)(nil),                                  // 23: teleport.secreports.v1.AuditQuery
	(*SecurityReport)(nil),                              // 24: teleport.secreports.v1.SecurityReport
	(*emptypb.Empty)(nil),                               // 25: google.protobuf.Empty
}
var file_teleport_secreports_v1_secreports_service_proto_depIdxs = []int32{
	23, // 0: teleport.secreports.v1.UpsertAuditQueryRequest.audit_query:type_name -> teleport.secreports.v1.AuditQuery
	24, // 1: teleport.secreports.v1.UpsertSecurityReportRequest.report:type_name -> teleport.secreports.v1.SecurityReport
	23, // 2: teleport.secreports.v1.ListAuditQueryResponse.queries:type_name -> teleport.secreports.v1.AuditQuery
	18, // 3: teleport.secreports.v1.GetSchemaResponse.views:type_name -> teleport.secreports.v1.GetSchemaResponse.ViewDesc
	17, // 4: teleport.secreports.v1.RunAuditQueryResponse.result:type_name -> teleport.secreports.v1.QueryResult
	24, // 5: teleport.secreports.v1.ListSecurityReportResponse.reports:type_name -> teleport.secreports.v1.SecurityReport
	20, // 6: teleport.secreports.v1.GetSecurityReportDetailsResponse.audit_queries:type_name -> teleport.secreports.v1.GetSecurityReportDetailsResponse.AuditQuery
	21, // 7: teleport.secreports.v1.QueryResult.columns:type_name -> teleport.secreports.v1.QueryResult.ColumnInfo
	22, // 8: teleport.secreports.v1.QueryResult.rows:type_name -> teleport.secreports.v1.QueryResult.Row
	19, // 9: teleport.secreports.v1.GetSchemaResponse.ViewDesc.columns:type_name -> teleport.secreports.v1.GetSchemaResponse.ViewDesc.ColumnDesc
	17, // 10: teleport.secreports.v1.GetSecurityReportDetailsResponse.AuditQuery.result:type_name -> teleport.secreports.v1.QueryResult
	4,  // 11: teleport.secreports.v1.SecReportsService.UpsertAuditQuery:input_type -> teleport.secreports.v1.UpsertAuditQueryRequest
	6,  // 12: teleport.secreports.v1.SecReportsService.GetAuditQuery:input_type -> teleport.secreports.v1.GetAuditQueryRequest
	9,  // 13: teleport.secreports.v1.SecReportsService.ListAuditQuery:input_type -> teleport.secreports.v1.ListAuditQueryRequest
	1,  // 14: teleport.secreports.v1.SecReportsService.DeleteAuditQuery:input_type -> teleport.secreports.v1.DeleteAuditQueryRequest
	5,  // 15: teleport.secreports.v1.SecReportsService.UpsertSecurityReport:input_type -> teleport.secreports.v1.UpsertSecurityReportRequest
	7,  // 16: teleport.secreports.v1.SecReportsService.GetSecurityReport:input_type -> teleport.secreports.v1.GetSecurityReportRequest
	10, // 17: teleport.secreports.v1.SecReportsService.ListSecurityReport:input_type -> teleport.secreports.v1.ListSecurityReportRequest
	2,  // 18: teleport.secreports.v1.SecReportsService.DeleteSecurityReport:input_type -> teleport.secreports.v1.DeleteSecurityReportRequest
	3,  // 19: teleport.secreports.v1.SecReportsService.RunAuditQuery:input_type -> teleport.secreports.v1.RunAuditQueryRequest
	12, // 20: teleport.secreports.v1.SecReportsService.GetSchema:input_type -> teleport.secreports.v1.GetSchemaRequest
	0,  // 21: teleport.secreports.v1.SecReportsService.RunSecurityReport:input_type -> teleport.secreports.v1.RunSecurityReportRequest
	8,  // 22: teleport.secreports.v1.SecReportsService.GetSecurityReportDetails:input_type -> teleport.secreports.v1.GetSecurityReportDetailsRequest
	25, // 23: teleport.secreports.v1.SecReportsService.UpsertAuditQuery:output_type -> google.protobuf.Empty
	23, // 24: teleport.secreports.v1.SecReportsService.GetAuditQuery:output_type -> teleport.secreports.v1.AuditQuery
	11, // 25: teleport.secreports.v1.SecReportsService.ListAuditQuery:output_type -> teleport.secreports.v1.ListAuditQueryResponse
	25, // 26: teleport.secreports.v1.SecReportsService.DeleteAuditQuery:output_type -> google.protobuf.Empty
	25, // 27: teleport.secreports.v1.SecReportsService.UpsertSecurityReport:output_type -> google.protobuf.Empty
	24, // 28: teleport.secreports.v1.SecReportsService.GetSecurityReport:output_type -> teleport.secreports.v1.SecurityReport
	15, // 29: teleport.secreports.v1.SecReportsService.ListSecurityReport:output_type -> teleport.secreports.v1.ListSecurityReportResponse
	25, // 30: teleport.secreports.v1.SecReportsService.DeleteSecurityReport:output_type -> google.protobuf.Empty
	14, // 31: teleport.secreports.v1.SecReportsService.RunAuditQuery:output_type -> teleport.secreports.v1.RunAuditQueryResponse
	13, // 32: teleport.secreports.v1.SecReportsService.GetSchema:output_type -> teleport.secreports.v1.GetSchemaResponse
	25, // 33: teleport.secreports.v1.SecReportsService.RunSecurityReport:output_type -> google.protobuf.Empty
	16, // 34: teleport.secreports.v1.SecReportsService.GetSecurityReportDetails:output_type -> teleport.secreports.v1.GetSecurityReportDetailsResponse
	23, // [23:35] is the sub-list for method output_type
	11, // [11:23] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_teleport_secreports_v1_secreports_service_proto_init() }
func file_teleport_secreports_v1_secreports_service_proto_init() {
	if File_teleport_secreports_v1_secreports_service_proto != nil {
		return
	}
	file_teleport_secreports_v1_secreports_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuditQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAuditQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAuditQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuditQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityReportDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAuditQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityReportDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaResponse_ViewDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaResponse_ViewDesc_ColumnDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityReportDetailsResponse_AuditQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_ColumnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_secreports_v1_secreports_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teleport_secreports_v1_secreports_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RunAuditQueryRequest_Name)(nil),
		(*RunAuditQueryRequest_SqlText)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_secreports_v1_secreports_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_secreports_v1_secreports_service_proto_goTypes,
		DependencyIndexes: file_teleport_secreports_v1_secreports_service_proto_depIdxs,
		MessageInfos:      file_teleport_secreports_v1_secreports_service_proto_msgTypes,
	}.Build()
	File_teleport_secreports_v1_secreports_service_proto = out.File
	file_teleport_secreports_v1_secreports_service_proto_rawDesc = nil
	file_teleport_secreports_v1_secreports_service_proto_goTypes = nil
	file_teleport_secreports_v1_secreports_service_proto_depIdxs = nil
}
